class BrowserLogdna{constructor(t,e,s,n){this.logdnaIngestionKey=t,this.logdnaHost=e,this.appName=s,this.env=n}registerHttpInteceptor(){let t=window.XMLHttpRequest.prototype.open;var e=this.logdnaIngestionKey,s=this.logdnaHost,n=this.appName,o=this.env;window.XMLHttpRequest.prototype.open=function(a,i,p,r,d){function u(t,a){if(!i.includes("/api/logdna/postLog")){var p=new XMLHttpRequest;const i=s+"/logs/ingest?hostname="+window.navigator.userAgent+"&now="+Date.now();p.open("POST","https://mathcandido.com/api/logdna/postLog",!0),p.setRequestHeader("auth",e),p.setRequestHeader("Content-Type","application/json");const r=JSON.stringify({payload:{lines:[{line:t,app:n,level:a,env:o,meta:{customfield:{}}}]},targetUrl:i});p.send(r)}}return this.addEventListener("load",(function(){u("Request "+a+" "+i+" returned a success state. Response status = "+this.status+". Response text = "+this.responseText,"INFO")})),this.addEventListener("error",(function(){u("Request "+a+" "+i+" returned an error. Response status = "+this.status+". Response text = "+this.responseText,"ERROR")})),this.addEventListener("abort",(function(){u("Request "+a+" "+i+" aborted. Response status = "+this.status+". Response text = "+this.responseText,"ERROR")})),t.apply(this,arguments)}}}
